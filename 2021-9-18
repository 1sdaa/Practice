#include<stdio.h>
#include<windows.h>


////写一个函数实现整形有序数组的二分查找
//int two_seek(int arr[],int k,int sz)
//{
//	
//	int left=0;
//	int right=sz-1;
//
//	while(left<=right)
//	{
//		int mid=(left+right)/2;
//		if(arr[mid]<k)
//		{
//			left=mid+1;
//		}
//		else if(arr[mid]>k)
//		{
//			right=mid-1;
//		}
//		else
//		{
//			return  mid;
//		}
//		
//	}
//	return -1;
//}
//int main()
//{
//	//二分查找
//	//在一个有序数组中查找具体的某个数
//	//如果找到了返回一个下标，找不到返回-1
//	int arr[]={1,2,3,4,5,6,7,8,9,10};
//	int k=7;
//	int sz=sizeof(arr)/sizeof(arr[0]);//求数组大小不能放在定义的函数内部去求 
//	int ret=two_seek(arr,k,sz);
//	if(ret==-1)
//	{
//		printf("找不到\n");
//	}
//	else
//	{
//		printf("下标是：%d\n",ret);
//	}
//	
//	system("pause");
//	return 0;
//}
////判断1000到2000年之间的闰年，并打印出来 
//int is_leep_year(int y)
//{
//	if((y%4==0&&y%100!=0)||(y%400==0))//闰年判断方法
//	{
//		return 1;
//	}
//	else
//	{
//		return 0;
//	}
//		
//
//}
//int main()
//{
//	int year=0;
//	for(year=1000;year<=2000;year++)
//	{
//		//判断是否为闰年
//		if(is_leep_year(year) == 1)//如果是闰年就返回1，然后打印出来
//		{
//			printf("%d ",year);
//		}
//
//	}
//	system("pause");
//	return 0;
//}
////用函数判断100到200之间的素数并打印出来
//int is_prime(int n)//是素数返回1，不是素数返回0
//{
//	int j=0;
//	for(j=2;j<n;j++)//该行代码可优化为for(j=2;j<=sqrt(n);j++)m意为j小于等于n的开平方，sqrt()头文件为<math.h>
//	{
//		if(n%j==0)//如果n对j取模等于0，则说明n能够被j整除，而j的取值范围为2到n-1，所以此时n不是素数
//		{
//			return 0;
//		}
//	}
//	return 1;
//}
//int main()
//{
//	int i=0;
//	for(i=100;i<=200;i++)
//	{
//		if(is_prime(i)==1)
//			printf("%d ",i);
//	}
//	system("pause");
//	return 0;
//}


////通过函数交换两个数的值
//void swap(int* pa,int* pb)//必须通过指针才能把a、b的值进行交换，必须要取地址
//{
//	int tmp=0;
//	tmp=*pa;
//	*pa=*pb;
//	*pb=tmp;
//}
//int main()
//{
//	int a=10;
//	int b=20;
//	printf("a=%d,b=%d\n",a,b);
//	swap(&a,&b);//必须通过指针交换a、b存储的地址才能进行交换
//	printf("a=%d,b=%d\n",a,b);
//	system("pause");
//	return 0;
//}



////自定义函数的用法，打印出最大值
//int get_max(int x,int y)//自定义get_max()函数为返回最大值的函数
//{
//	if(x>y)
//	{
//		return x;
//	}
//	else
//	{
//		return y;
//	}
//}
////主函数
//int main()
//{
//	int a=10;
//	int b=20;
//	int max = get_max(a,b);
//	printf("max=%d\n",max);
//	system("pause");
//	return 0;
//}


////strcpy()函数的用法示例
//int main()
//{
//	char arr1[]="bit";
//	char arr2[]="############";
//	strcpy(arr2,arr1);//把arr1的内容拷贝到arr2里去
//	printf("%s\n",arr2);
//	system("pause");
//	return 0;
//}
